const { ValidationError, UniqueConstraintError } = require('sequelize');
const ErroBase = require('../database/Error/ErroBase.js');
const RequisicaoIncorreta = require('../database/Error/RequisicaoIncorreta.js');
const ErroValidacao = require('../database/Error/ErroValidacao.js');
const NaoEncontrado = require('../database/Error/NaoEncontrado.js');


// eslint-disable-next-line no-unused-vars
function ManipuladorDeErros(erro, req, res, next) {
  console.error(erro); // Mostra no terminal o erro completo

  // üîπ Erros de valida√ß√£o Sequelize
  if (erro instanceof ValidationError) {
    return new ErroValidacao(erro).enviarResposta(res);
  }

  // üîπ Erros de restri√ß√£o √∫nica (chave duplicada)clear
  
  if (erro instanceof UniqueConstraintError) {
    return new RequisicaoIncorreta("O valor informado j√° est√° em uso.").enviarResposta(res);
  }

  // Erros de rota n√£o encontrada
  if (erro instanceof NaoEncontrado) {
    return erro.enviarResposta(res);
  }

  // Outros erros com status definido
  if (erro.status === 400) {
    return new RequisicaoIncorreta().enviarResposta(res);
  }

  // Qualquer outro erro gen√©rico
  return new ErroBase().enviarResposta(res);
}

module.exports = ManipuladorDeErros;


//estudar sobre Valida√ß√£o personalizada da alura, curso  node.js:lidando com buscas, filtros e pagina√ß√£o e erros em uma api Restful